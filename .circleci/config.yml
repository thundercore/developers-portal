version: 2.1

##############
# Executors  #
##############
executors:
  thunderci:
    working_directory: ~/repo
    docker:
    - image: 085892847382.dkr.ecr.us-west-2.amazonaws.com/dev/apps-ci-docker

##############
# commands   #
##############
commands:
  basic_env:
    steps:
      - run:
          name: "Setup the environment"
          command: |
            NAME=`git log -1 --pretty=format:'%an'`
            IMAGE_TAG=`echo $CIRCLE_SHA1 | cut -c -8`
            MESSAGE=`git log --format=%B -n 1 $CIRCLE_SHA1`
            echo "export IMAGE_TAG=\"${IMAGE_TAG}\"" >> $BASH_ENV
            echo "export COMMIT_NAME=\"${NAME}\"" >> $BASH_ENV
            echo "export COMMIT_MESSAGE=\"${MESSAGE}\"" >> $BASH_ENV
  build:
    steps:
      - run:
          name: Install tools missing in apps-ci-docker
          command: sudo apk add autoconf automake
      - restore_cache:
          name: "Restoring yarn cache"
          keys:
          - yarn-packages-{{ .Branch }}
      - run:
          name: Build docusaurus site
          command: |
            pwd
            ls -la
            echo ${SITENAME}
            cd ${SITENAME} && yarn install && yarn build
      - save_cache:
          name: "Saving yarn cache"
          paths:
          - ~/.cache/yarn
          key: yarn-packages-{{ .Branch }}

  deploy:
    steps:
      - run:
          name: Deploy to S3
          command: |
            if [ "${ENV}" == "prod" ]; then
              echo "Exporting production AWS access keys"
              export AWS_ACCESS_KEY_ID=${AWS_APP_PROD_ACCESS_KEY_ID}
              export AWS_SECRET_ACCESS_KEY=${AWS_APP_PROD_SECRET_ACCESS_KEY}
              export AWS_DEFAULT_REGION=${AWS_APP_PROD_DEFAULT_REGION}
            fi
            ./deploy/deploy.sh
            ./redirect.sh
      - run:
          name: Build Success
          when: on_success
          command: |
              # notify success
              SLACK_URL=${SLACK_URL} \
              COMMIT=${IMAGE_TAG} \
              AUTHOR=${COMMIT_NAME} \
              BUILD_URL=${CIRCLE_BUILD_URL} \
              MESSAGE=${COMMIT_MESSAGE} \
              APP_URL=${URL} \
              STATUS="SUCCESS" \
              deploy/notify.sh
      - run:
          name: Build Failed
          when: on_fail
          command: |
              SLACK_URL=${SLACK_URL} \
              COMMIT=${IMAGE_TAG} \
              AUTHOR=${COMMIT_NAME} \
              BUILD_URL=${CIRCLE_BUILD_URL} \
              MESSAGE=${COMMIT_MESSAGE} \
              deploy/notify.sh
  purge_cdn:
    steps:
      - run:
          name: purge CloudFront cache
          command: |
            if [ "${ENV}" == "prod" ]; then
              echo "Exporting production AWS access keys"
              export AWS_ACCESS_KEY_ID=${AWS_APP_PROD_ACCESS_KEY_ID}
              export AWS_SECRET_ACCESS_KEY=${AWS_APP_PROD_SECRET_ACCESS_KEY}
              export AWS_DEFAULT_REGION=${AWS_APP_PROD_DEFAULT_REGION}
            fi
            aws cloudfront create-invalidation --distribution-id ${DISTRIBUTION_ID} --paths '/*'
  
##############
# Aliases    #
##############

master_branch_filter: &master_branch_filter
  filters:
    branches:
      only:
      - master

tag_filter: &tag_filter
  filters:
    tags:
      only: /^(\d+\.){2}\d+(-.*)?$/
    branches:
      ignore: /.*/

##############
# Workflows  #
##############

workflows:
  version: 2

  build-deploy-platform:
    jobs:
    - deploy-dev:
        env: dev
        url: dev-portal.dev.tt-eng.com
        redirect_url: sc-portal.dev.tt-eng.com
        sitename: dev-portal
        <<: *master_branch_filter
    - deploy-dev:
        env: dev
        url: sc-portal.dev.tt-eng.com
        redirect_url: dev-portal.dev.tt-eng.com
        sitename: sc-portal
        <<: *master_branch_filter

  build-deploy-prod:
    jobs:
    - deploy-prod:
        env: prod
        url: developers.thundercore.com
        <<: *tag_filter


##############
# Jobs       #
##############
jobs:
  test:
    executor: thunderci
    steps:
    - checkout
    - build

  deploy-dev:
    executor: thunderci
    parameters:
      url:
        type: string
      redirect_url:
        type: string
      env:
        type: string
      sitename:
        type: string
    environment:
      URL: << parameters.url >>
      REDIRECT_URL: << parameters.redirect_url >>
      ENV: << parameters.env >>
      SITENAME: << parameters.sitename >>
    steps:
    - checkout
    - build
    - basic_env
    - deploy

  deploy-prod:
    executor: thunderci
    parameters:
      url:
        type: string
      env:
        type: string
    environment:
      URL: << parameters.url >>
      ENV: << parameters.env >>
    steps:
    - checkout
    - build
    - basic_env
    - deploy
    - purge_cdn
